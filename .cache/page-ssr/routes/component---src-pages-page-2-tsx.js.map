{"version":3,"file":"component---src-pages-page-2-tsx.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/page-2.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = (props: PageProps) => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2 ({props.path})</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, { useState } from \"react\"\n\nfunction Header({ siteTitle }) {\n  const [isExpanded, toggleExpansion] = useState(false)\n\n  return (\n    <nav>\n      header\n      </nav>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport '../styles/globals.css'\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"names":["React","Link","Layout","SEO","SecondPage","props","createElement","title","path","to","PropTypes","useState","Header","siteTitle","isExpanded","toggleExpansion","propTypes","string","defaultProps","children","data","staticQueryData","Fragment","site","siteMetadata","style","margin","maxWidth","padding","Date","getFullYear","href","node","isRequired","Helmet","description","lang","meta","_site$siteMetadata","_site$siteMetadata2","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","arrayOf","object"],"sourceRoot":""}