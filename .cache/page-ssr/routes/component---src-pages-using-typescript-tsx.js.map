{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <SEO title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>.tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, { useState } from \"react\"\n\nfunction Header({ siteTitle }) {\n  const [isExpanded, toggleExpansion] = useState(false)\n\n  return (\n    <nav>\n      header\n      </nav>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport '../styles/globals.css'\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"names":["UsingTypescript","path","data","query","Link","PropTypes","React","useState","Header","siteTitle","isExpanded","toggleExpansion","propTypes","string","defaultProps","useStaticQuery","Layout","children","site","siteMetadata","title","margin","maxWidth","padding","Date","getFullYear","node","isRequired","Helmet","SEO","description","lang","meta","metaDescription","defaultTitle","name","content","property","author","concat","arrayOf","object"],"sourceRoot":""}