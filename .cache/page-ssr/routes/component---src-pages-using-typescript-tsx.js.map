{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <SEO title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>.tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, { useState } from \"react\"\n\nfunction Header({ siteTitle }) {\n  const [isExpanded, toggleExpansion] = useState(false)\n\n  return (\n    <nav>\n      header\n      </nav>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport '../styles/globals.css'\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"names":["UsingTypescript","path","data","query","Link","PropTypes","React","useState","Header","siteTitle","isExpanded","toggleExpansion","propTypes","string","defaultProps","Layout","children","site","siteMetadata","title","margin","maxWidth","padding","Date","getFullYear","node","isRequired","Helmet","SEO","description","lang","meta","metaDescription","defaultTitle","name","content","property","author","concat","arrayOf","object"],"sourceRoot":""}